<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Apache | momoto.github.io]]></title>
  <link href="http://momoto.github.io/blog/categories/apache/atom.xml" rel="self"/>
  <link href="http://momoto.github.io/"/>
  <updated>2013-08-25T03:20:13+09:00</updated>
  <id>http://momoto.github.io/</id>
  <author>
    <name><![CDATA[Seiji Momoto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Apache HTTP Server 2.4.6をインストールする（ソースからビルドする方法）]]></title>
    <link href="http://momoto.github.io/blog/2013/07/31/guide-to-compiling-and-installing-apache-http-server-2-dot-4-6/"/>
    <updated>2013-07-31T22:10:00+09:00</updated>
    <id>http://momoto.github.io/blog/2013/07/31/guide-to-compiling-and-installing-apache-http-server-2-dot-4-6</id>
    <content type="html"><![CDATA[<p>　Apache HTTP Server 2.4.6をソースコードからビルドして、Unix系システムへインストールする手引きです。
この記事ではCentOS 6.4環境でインストールの例を示しますが、自身でソースからビルドする方法は特定のLinuxディストリビューションに依りません。<!-- more -->
インストールを行うユーザは、インストール先ディレクトリに対して書込み権限をもっている必要があります。/usr/local/* にインストールする場合、通常、root権限が必要です。</p>

<ol>
<li><h3>ソースコードを取得する</h3>

<p>　ソースコードをインストールするマシンに用意します。
インターネットからダウンロードする場合、<a href="http://httpd.apache.org/download.cgi#apache24" title="Download - The Apache HTTP Server Project">httpd.apache.org</a>にソースコードのURLが示されています。
bzip2、gzipのアーカイブが用意されていますので、マシンで解凍・展開できる形式を選択してください。</p>

<p>　ダウンロードにはcURLやGNU Wgetなどのダウンロードマネージャやウェブブラウザを使用します。
次の例では、cURLをつかって<a href="http://ftp.riken.jp/net/apache/" title="Software archives at ftp.riken.jp">理化学研究所</a>のミラーからhttpd-2.4.6.tar.gzをダウンロードします。</p>

<pre><code>[root@localhost ~]# curl -LsO http://ftp.riken.jp/net/apache//httpd/httpd-2.4.6.tar.gz
</code></pre>

<p>　取得したアーカイブファイルは適宜、解凍・展開して、ワーキングディレクトリを移動させます。
<a href="http://www.pathname.com/fhs/pub/fhs-2.3.html#USRLOCALLOCALHIERARCHY" title="Filesystem Hierarchy Standard 2.3">FHS</a>に従うシステムであれば、独自にインストールするソフトウェアのためのディレクトリ /usr/local が予め用意されていますので、この記事ではソースコードを /usr/local/src に配置してインストールをすすめます。</p>

<pre><code>[root@localhost ~]# tar xfz httpd-2.4.6.tar.gz -C /usr/local/src/
[root@localhost ~]# cd /usr/local/src/httpd-2.4.6/
[root@localhost httpd-2.4.6]# 
</code></pre></li>
<li><h3>インストール要件を満たす</h3>

<p>　マシンがインストールの要件を満たしている必要があります。
要件については<a href="http://httpd.apache.org/docs/2.4/en/install.html" title="Compiling and Installing - Apache HTTP Server">Documentation</a>に詳しい説明があります。</p>

<ul>
<li><p>Cコンパイラ</p>

<pre><code>[root@localhost ~]# yum install gcc
</code></pre></li>
<li><p>Make</p>

<pre><code>[root@localhost ~]# yum install make
</code></pre></li>
<li><p><a href="http://apr.apache.org/" title="The Apache Portable Runtime Project">APR</a> &ndash; 予めシステムに備わっていない場合（またはシステムが提供するバージョンを使用したくない場合）は<a href="http://apr.apache.org/download.cgi" title="Download - The Apache Portable Runtime Project">apr.apache.org</a>から取得してhttpdに含めてビルドします。取得したAPRとAPR-Utilはバージョン番号を取り除いて"./srclib/apr"と"./srclib/apt-util"に展開します。</p>

<pre><code>[root@localhost httpd-2.4.6]# cd srclib/
[root@localhost srclib]# curl -Lso apr-1.4.8.tar.gz http://ftp.jaist.ac.jp/pub/apache//apr/apr-1.4.8.tar.gz
[root@localhost srclib]# tar xfz apr-1.4.8.tar.gz
[root@localhost srclib]# mv apr-1.4.8/ apr
[root@localhost srclib]# curl -Lso apr-util-1.5.2.tar.gz http://ftp.jaist.ac.jp/pub/apache//apr/apr-util-1.5.2.tar.gz
[root@localhost srclib]# tar xfz apr-util-1.5.2.tar.gz
[root@localhost srclib]# mv apr-util-1.5.2/ apr-util
</code></pre></li>
<li><p>PCREライブラリ &ndash; <a href="http://www.pcre.org/" title="PCRE - Perl Compatible Regular Expressions">www.pcre.org</a>やディストリビューションからインストールします。</p>

<pre><code>[root@localhost httpd-2.4.6]# yum install pcre-devel
</code></pre></li>
</ul>
</li>
<li><h3>ビルドファイルを作成する</h3>

<p>　configureをつかってビルドファイルを作成します。configureにオプションを与えることで、インストール先のディレクトリや有効にするモジュールを調整できます。
指定できるオプションについては<code>configure --help</code>や<a href="http://httpd.apache.org/docs/2.4/en/programs/configure.html">Documentation</a>を参照してください。
ビルドの要件を満たしていない場合、configureの処理は中断されます。</p>

<p>　例えば、インストール先のディレクトリを /usr/local/httpd-2.4.6 として、
<a href="http://httpd.apache.org/docs/2.4/en/dso.html" title="Dynamic Shared Object (DSO) Support - Apache HTTP Server">DSOサポート</a>を有効、<a href="http://httpd.apache.org/docs/2.4/en/mpm.html" title="Multi-Processing Modules (MPMs) - Apache HTTP Server">MPM</a>を<a href="http://httpd.apache.org/docs/2.4/en/mod/prefork.html" title="prefork - Apache HTTP Server">prefork</a>と明示して、
新たに取得したAPRを使用する場合は次のようにconfigureを実行します。</p>

<pre><code>[root@localhost httpd-2.4.6]# ./configure --prefix=/usr/local/httpd-2.4.6 --enable-so --with-mpm=prefork --with-included-apr
</code></pre>

<p>　次に、configureのエラー例をいくつか示します。</p>

<ul>
<li><h4>APR not found.</h4>

<pre><code>checking for APR... no
configure: error: APR not found.  Please read the documentation.
</code></pre>

<p>　APRが正しくインストールされているか確認してください。</p></li>
<li><h4>no acceptable C compiler found in $PATH</h4>

<pre><code>checking for gcc... no
checking for cc... no
checking for cl.exe... no
configure: error: in `/usr/local/src/httpd-2.4.6/srclib/apr':
configure: error: no acceptable C compiler found in $PATH
</code></pre>

<p>　Cコンパイラが正しくインストールされているか確認してください。</p></li>
<li><h4>pcre-config for libpcre not found.</h4>

<pre><code>checking for pcre-config... false
configure: error: pcre-config for libpcre not found. PCRE is required and available from http://pcre.org/
</code></pre>

<p>　PCREライブラリが正しくインストールされているか確認してください。</p></li>
</ul>


<p>　configureの処理が終了してMakefileが作成されていれば、ビルドの段階へすすみます。</p></li>
<li><h3>ビルドとインストール</h3>

<p>　ビルドとインストールにはmakeを使います。ディスクの容量が充分足りていることを確認してください。</p>

<pre><code>[root@localhost httpd-2.4.6]# make &amp;&amp; make install
</code></pre>

<p>　makeの処理が無事に終了したらインストールは完了です。
configureの<code>--prefix</code>に指定した位置にファイルが展開されているはずです。PREFIXを指定していなかった場合は"/usr/local/apache2"になります。</p>

<pre><code>[root@localhost httpd-2.4.6]# /usr/local/httpd-2.4.6/bin/httpd -v
Server version: Apache/2.4.6 (Unix)
</code></pre></li>
</ol>


<h2>インストール後</h2>

<p>　必要に応じて、httpd.confの設定、起動スクリプトの設置、自動起動の設定、実行バイナリへのパスの設定を行なってください。
ソースコードのアーカイブには、標準のLSB起動スクリプトが用意されています。</p>

<pre><code>[root@localhost httpd-2.4.6]# cp /usr/local/src/httpd-2.4.6/build/rpm/httpd.init /etc/init.d/httpd
</code></pre>

<h3>動作を確認する</h3>

<p>　最後に、ウェブサーバの動作を少し確認してみます。
ウェブサーバにとって外部のホストから動作を確認する場合はファイアウォール等の制限を受けやすいので、まずはインストールを行ったマシンからループバックで確認するとネットワークアクセスの問題と区別できます。</p>

<p>　FirefoxやLynxなどのブラウザや、GNU WgetやcURLをつかって、自身に対してHTTPリクエストを送信します（Wget、cURLを使う場合、HTMLの描写はされません）。
うまく動作していればドキュメントルートに予め用意されているHTMLファイルを応答するはずです。</p>

<pre><code>[root@localhost ~]# lynx localhost
</code></pre>

<p><img src="/blog/images/2013-07-31-guide-to-compiling-and-installing-apache-http-server-2-dot-4-6/apache-http-server-works.png" title="LynxでApache HTTP Server 2.4.6の動作を確認する" ></p>

<p>　ネットワークアクセスを介すると動作が確認できなくなる場合、様々な原因が考えられますが、GNU/LinuxのシステムでよくあるのはiptablesやSELinuxなどのセキュリティによるものです。
外部からのアクセスを受け入れようとする場合はHTTPのネットワーク通信を許可する必要がありますが、これらの作業は実質、セキュリティ強度を緩和しているので、マシンが接続しているネットワークや記録しているコンテンツをよく確かめて設定するべきです。
Apache HTTP Serverの領域から少し外れますが、iptablesとSELinuxの設定の確認方法を示します。</p>

<ul>
<li><p>　iptablesを使用している場合、パケットフィルタのルールを確認します。
例えばCentOS 6.4の初期状態では下記のように、ポート80の受信の許可を明示していないため、外部のクライアントからのリクエストに応答できません。</p>

<pre><code>[root@localhost ~]# iptables --list-rules
-P INPUT ACCEPT
-P FORWARD ACCEPT
-P OUTPUT ACCEPT
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
</code></pre>

<p>　上記のようなルールの場合、<code>-A INPUT -j REJECT --reject-with icmp-host-prohibited</code>の上に、<code>-A INPUT -p tcp -m tcp --dport 80 -j ACCEPT</code>というルールを新しく追加する等の変更が必要になります。
変更の方法も様々ですが、CentOS 6.4であれば/etc/sysconfig/iptablesを書き換えた後にiptablesを再起動するとルールが再設定されます。</p></li>
<li><p>　SELinuxを使用している場合、<code>httpd_can_network_connect</code>の値を確認します。</p>

<pre><code>[root@localhost ~]# getsebool httpd_can_network_connect
httpd_can_network_connect --&gt; off
</code></pre>

<p>　ネットワークを通してウェブサーバを使用する場合は、この値にonを設定します。</p>

<pre><code>[root@localhost ~]# setsebool -P httpd_can_network_connect on
</code></pre>

<p>　<code>httpd_can_network_connect</code>の他、CGIやDBを制限する項目もあるので、用途に応じて適当なポリシーを設定する必要があります。</p></li>
</ul>


<h3>参考</h3>

<ul>
<li><a href="http://httpd.apache.org/docs/2.4/" title="Apache HTTP Server Version 2.4 Documentation - Apache HTTP Server">Apache HTTP Server Version 2.4 Documentation &ndash; Apache HTTP Server</a></li>
<li><a href="http://apr.apache.org/" title="The Apache Portable Runtime Project">The Apache Portable Runtime Project</a></li>
</ul>


<h3>関連記事</h3>

<ul>
<li><a href="/blog/2013/07/31/guide-to-compiling-and-installing-mysql-community-server-5-dot-6-13/">MySQL Community Server 5.6.13をインストールする（ソースからビルドする方法）</a></li>
<li><a href="/blog/2013/07/31/guide-to-compiling-and-installing-php-5-dot-5-1/">PHP 5.5.1をインストールする（ソースからビルドする方法）</a></li>
<li><a href="/blog/2013/04/06/install-centos-6-dot-4-i386-netinstall/">CentOS 6.4をインストールする</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
