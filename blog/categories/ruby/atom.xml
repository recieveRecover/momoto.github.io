<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ruby | momoto.github.io]]></title>
  <link href="http://momoto.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://momoto.github.io/"/>
  <updated>2013-11-24T19:39:03+09:00</updated>
  <id>http://momoto.github.io/</id>
  <author>
    <name><![CDATA[Seiji Momoto]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Red Hat OpenShiftにRedmine 2.0を展開する]]></title>
    <link href="http://momoto.github.io/blog/2013/08/24/deploying-redmine-2-dot-0-on-openshift/"/>
    <updated>2013-08-24T12:06:00+09:00</updated>
    <id>http://momoto.github.io/blog/2013/08/24/deploying-redmine-2-dot-0-on-openshift</id>
    <content type="html"><![CDATA[<p>　Red Hat OpenShiftにプロジェクト管理ソフトウェアのRedmine 2.0を展開します。rhcとredmine-2.0-openshift-quickstartを使用しています。あらかじめOpenShiftのアカウントを作成している必要があります。</p>

<!--more-->


<ol>
<li><h4>Ruby 1.9のアプリケーションを作成する</h4>

<p>　<code>rhc app create</code>でアプリケーションを作成します。-aにはアプリケーション名、-tにはウェブカートリッジを指定します。</p>

<pre><code>$ rhc app create -a redmine -t ruby-1.9
Application Options
-------------------
  Namespace:  momoto
  Cartridges: ruby-1.9
  Gear Size:  default
  Scaling:    no

Creating application 'redmine' ... done

Waiting for your DNS name to be available ... done

Cloning into 'redmine'...
Checking connectivity... done

Your application 'redmine' is now available.

  URL:        http://redmine-momoto.rhcloud.com/
  SSH to:     *
  Git remote: *
  Cloned to:  ~/Workspace/redmine

Run 'rhc show-app redmine' for more details about your app.
</code></pre>

<p>　アプリケーションの作成と同時に、Gitリポジトリがローカルにクローンされています。</p></li>
<li><h4>MySQL Database 5.1カートリッジを追加する</h4>

<p>　<code>rhc cartridge add</code>でMySQL Database 5.1アドオンカートリッジを追加します。追加できるカートリッジは<code>rhc cartridges</code>または<code>rhc cartridge list</code>で確認できます。</p>

<pre><code>$ rhc cartridge add -a redmine -c mysql-5.1
Adding mysql-5.1 to application 'redmine' ... done

mysql-5.1 (MySQL Database 5.1)
------------------------------
  Gears:          Located with ruby-1.9
  Connection URL: mysql://$OPENSHIFT_MYSQL_DB_HOST:$OPENSHIFT_MYSQL_DB_PORT/
  Database Name:  *
  Password:       *
  Username:       *

MySQL 5.1 database added.  Please make note of these credentials:
       Root User: *
   Root Password: *
   Database Name: *
Connection URL: mysql://$OPENSHIFT_MYSQL_DB_HOST:$OPENSHIFT_MYSQL_DB_PORT/
You can manage your new MySQL database by also embedding phpmyadmin-3.4.
The phpmyadmin username and password will be the same as the MySQL credentials above.
</code></pre></li>
<li><h4>redmine-2.0-openshift-quickstartを併合する</h4>

<ol>
<li>　OpenShiftからクローンしたローカルリポジトリにワーキングディレクトリをうつします</li>
<li>　GitHubの<a href="https://github.com/openshift/redmine-2.0-openshift-quickstart">redmine-2.0-openshift-quickstart</a>を<code>upstream</code>としてリモートリポジトリに追加します</li>
<li>　ローカルリポジトリにupstreamを併合します（MERGE STRATEGYはrecursive、recursive strategyのオプションはtheirs）</li>
</ol>


<p>　もし、OpenShiftからリポジトリをクローンしなおす場合は<code>rhc git-clone &lt;app&gt;</code>をつかいます。</p>

<pre><code>$ cd redmine/
$ git remote add upstream -m master git://github.com/openshift/redmine-2.0-openshift-quickstart.git
$ git pull -s recursive -X theirs upstream master
warning: no common commits
remote: Counting objects: 2003, done.
remote: Compressing objects: 100% (1725/1725), done.
remote: Total 2003 (delta 300), reused 1897 (delta 199)
Receiving objects: 100% (2003/2003), 4.06 MiB | 272.00 KiB/s, done.
Resolving deltas: 100% (300/300), done.
From git://github.com/openshift/redmine-2.0-openshift-quickstart
 * branch            master     -&gt; FETCH_HEAD
Auto-merging config.ru
Auto-merging README.md
Auto-merging .openshift/cron/weekly/jobs.allow
Auto-merging .openshift/cron/README.cron
...
</code></pre></li>
<li><h4>OpenShiftに展開する</h4>

<p>　redmine-2.0-openshift-quickstartと併合したローカルリポジトリを、OpenShiftのリモートリポジトリ（origin）に更新します。</p>

<pre><code>$ git push origin master
Counting objects: 2011, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (1625/1625), done.
Writing objects: 100% (2001/2001), 4.06 MiB | 1.58 MiB/s, done.
Total 2001 (delta 307), reused 1989 (delta 300)
remote: Stopping Ruby cart
remote: Running build on Ruby cart
remote: Bundling RubyGems based on Gemfile/Gemfile.lock to repo/vendor/bundle with 'bundle install --deployment'
remote: Fetching gem metadata from http://rubygems.org/.........
...
</code></pre>

<p>　<code>git push</code>の処理が終わったら、ウェブブラウザからアプリケーションのURLへアクセスして動作を確認します。アプリケーションのURLは<code>rhc show-app &lt;app&gt;</code>からも確認できます。</p>

<p><img src="/blog/images/2013-08-24-deploying-redmine-2-dot-0-on-openshift/redmine-home.png" width="500" title="Red Hat OpenShiftにRedmine 2.0を展開する" ></p></li>
</ol>


<p>　OpenShiftではRedmineのほか、<a href="https://www.openshift.com/quickstarts/django">Django</a>、<a href="https://www.openshift.com/quickstarts/cakephp">CakePHP</a>、<a href="https://www.openshift.com/quickstarts/wordpress-3x">WordPress 3.x</a>などのクイックスタートも用意されています。</p>

<h2>参考</h2>

<ul>
<li><a href="https://www.openshift.com/developers/documentation">Understanding OpenShift | OpenShift by Red Hat</a></li>
<li><a href="https://github.com/openshift">openshift (OpenShift Origin) · GitHub</a>

<ul>
<li><a href="https://github.com/openshift/redmine-2.0-openshift-quickstart">openshift/redmine-2.0-openshift-quickstart</a></li>
</ul>
</li>
</ul>


<h2>関連記事</h2>

<ul>
<li><a href="/blog/2013/08/24/installation-guide-for-openshift-rhc-client-tools/">Red Hat OpenShiftクライアントツールをインストールする</a></li>
<li><a href="/blog/2013/05/31/deploy-redmine-2-dot-3-1-on-heroku/">HerokuにRedmine 2.3.1を展開する</a></li>
</ul>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_top&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=seijimomotobl-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4822211983" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_top&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=seijimomotobl-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=4774155934" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HerokuにRedmine 2.3.1を展開する]]></title>
    <link href="http://momoto.github.io/blog/2013/05/31/deploy-redmine-2-dot-3-1-on-heroku/"/>
    <updated>2013-05-31T23:19:00+09:00</updated>
    <id>http://momoto.github.io/blog/2013/05/31/deploy-redmine-2-dot-3-1-on-heroku</id>
    <content type="html"><![CDATA[<p>　Herokuが提供するPaaSにプロジェクト管理ソフトウェア Redmine 2.3.1を展開します。
Redmineのバージョンは2.3.1、Rubyは1.9.2-p320、<a href="https://aur.archlinux.org/packages/heroku-client/">heroku-toolbelt</a>は2.39.4を使用しました。</p>

<!-- more -->


<h4>Redmine 2.3.1のダウンロード</h4>

<p>2013.05.31の時点で最新版である2.3.1をGitでクローンします。また、productionというブランチを作成し、チェックアウトします。</p>

<pre><code>$ git clone git://github.com/redmine/redmine.git

  Cloning into 'redmine'...
  remote: Counting objects: 101645, done.
  remote: Compressing objects: 100% (23821/23821), done.
  remote: Total 101645 (delta 79311), reused 98395 (delta 76195)
  Receiving objects: 100% (101645/101645), 25.39 MiB | 256.00 KiB/s, done.
  Resolving deltas: 100% (79311/79311), done.

$ cd redmine
$ git checkout -b production

  Switched to a new branch 'production'
</code></pre>

<h4>Rubyの確認</h4>

<p>ここではRubyのバージョン管理にrbenvを使用しています。また、インストールの過程でBundlerが必要になります。</p>

<pre><code>$ rbenv local 1.9.2-p320
$ ruby --version

  ruby 1.9.2p320 (2012-04-20 revision 35421) [x86_64-linux]

$ gem install bundler

  Successfully installed bundler-1.3.5
  1 gem installed
  Installing ri documentation for bundler-1.3.5...
  Building YARD (yri) index for bundler-1.3.5...
  Installing RDoc documentation for bundler-1.3.5...
</code></pre>

<h4>.gitignoreの編集</h4>

<p>次の記述を削除します。</p>

<pre><code>-/config/configuration.yml
-/config/email.yml
-/config/initializers/session_store.rb
-/config/initializers/secret_token.r

-/public/plugin_assets

-/Gemfile.lock
-/Gemfile.local
</code></pre>

<h4>Gemfileの編集</h4>

<p>次のように書き換えました。</p>

<pre><code>source 'https://rubygems.org'

gem "rails", "3.2.13"
gem "jquery-rails", "~&gt; 2.0.2"
gem "i18n", "~&gt; 0.6.0"
gem "coderay", "~&gt; 1.0.6"
gem "fastercsv", "~&gt; 1.5.0", :platforms =&gt; [:mri_18, :mingw_18, :jruby]
gem "builder", "3.0.0"

group :ldap do
  gem "net-ldap", "~&gt; 0.3.1"
end

group :openid do
  gem "ruby-openid", "~&gt; 2.1.4", :require =&gt; "openid"
  gem "rack-openid"
end

platforms :mri, :mingw do
  group :rmagick do
    gem "rmagick", "&gt;= 2.0.0"
  end
end

platforms :mri, :mingw do  
  group :postgresql do  
    gem "pg", "&gt;= 0.11.0"  
  end  
end  

platforms :jruby do  
  gem "jruby-openssl"  

  group :postgresql do  
    gem "activerecord-jdbcpostgresql-adapter"  
  end  
end

group :development do
  gem "rdoc", "&gt;= 2.4.2"
  gem "yard"
end

group :test do
  gem "shoulda", "~&gt; 3.3.2"
  gem "mocha", "&gt;= 0.14", :require =&gt; 'mocha/api'
  if RUBY_VERSION &gt;= '1.9.3'
    gem "capybara", "~&gt; 2.1.0"
    gem "selenium-webdriver"
  end
end

local_gemfile = File.join(File.dirname(__FILE__), "Gemfile.local")
if File.exists?(local_gemfile)
  puts "Loading Gemfile.local ..." if $DEBUG # `ruby -d` or `bundle -v`
  instance_eval File.read(local_gemfile)
end

# Load plugins' Gemfiles
Dir.glob File.expand_path("../plugins/*/Gemfile", __FILE__) do |file|
  puts "Loading #{file} ..." if $DEBUG # `ruby -d` or `bundle -v`
  #TODO: switch to "eval_gemfile file" when bundler &gt;= 1.2.0 will be required (rails 4)
  instance_eval File.read(file), file
end
</code></pre>

<h4>config/application.rbの編集</h4>

<p>次の記述を追記しました。</p>

<pre><code>+    config.assets.initialize_on_precompile = false
</code></pre>

<h4>config/environment.rbの編集</h4>

<p>次の記述をコメントアウトします。</p>

<pre><code>-vendor_plugins_dir = File.join(Rails.root, "vendor", "plugins")
-if Dir.glob(File.join(vendor_plugins_dir, "*")).any?
-  $stderr.puts "Plugins in vendor/plugins (#{vendor_plugins_dir}) are no longer allowed. " +
-    "Please, put your Redmine plugins in the `plugins` directory at the root of your " +
-    "Redmine directory (#{File.join(Rails.root, "plugins")})"
-  exit 1
-end
+#vendor_plugins_dir = File.join(Rails.root, "vendor", "plugins")
+#if Dir.glob(File.join(vendor_plugins_dir, "*")).any?
+#  $stderr.puts "Plugins in vendor/plugins (#{vendor_plugins_dir}) are no longer allowed. " +
+#    "Please, put your Redmine plugins in the `plugins` directory at the root of your " +
+#    "Redmine directory (#{File.join(Rails.root, "plugins")})"
+#  exit 1
+#end
</code></pre>

<h4>Gemパッケージのインストール</h4>

<p>必要なGemパッケージをインストールします。config/database.ymlの設定を促されていますが、現時点では設定しません。</p>

<pre><code>$ bundle install

  Please configure your config/database.yml first
  Fetching gem metadata from https://rubygems.org/.........
  Resolving dependencies...
  ...
  Your bundle is complete!
</code></pre>

<p>セッションストアを生成します。</p>

<pre><code>$ bundle exec rake generate_secret_token

  Please configure your config/database.yml first
  Please configure your config/database.yml first
</code></pre>

<h4>アプリケーションの作成</h4>

<p>Herokuツールベルトを使用して、アプリケーションを作成します。ツールベルトと同様に、Herokuアカウントの登録が必要です。</p>

<pre><code>$ heroku login

  Enter your Heroku credentials.
  Email: ********
  Password (typing will be hidden): 
  Authentication successful.

$ heroku create [NAME]

  Creating [NAME]... done, stack is cedar
  http://[NAME].herokuapp.com/ | git@heroku.com:[NAME].git
  Git remote heroku added
</code></pre>

<h4>Herokuへ配置</h4>

<p>Gitを使用します。Pushの時点でconfig/database.ymlが自動的に作られるようです。</p>

<pre><code>$ git add .
$ git commit -m "init"
$ git push heroku production:master

  -----&gt; Ruby/Rails app detected
  -----&gt; Installing dependencies using Bundler version 1.3.2
  -----&gt; Writing config/database.yml to read from DATABASE_URL
  -----&gt; Preparing app for Rails asset pipeline

  -----&gt; Launching... done, v8
</code></pre>

<h4>テーブルやデフォルトデータの用意</h4>

<p>言語を選択するプロンプトが現れます。</p>

<pre><code>$ heroku run rake db:migrate

  Connecting to database specified by DATABASE_URL
  Creating scope :system. Overwriting existing method Enumeration.system.
  ...

$ heroku run rake redmine:load_default_data

  Connecting to database specified by DATABASE_URL
  Creating scope :system. Overwriting existing method Enumeration.system.

  Select language: ar, az, bg, bs, ca, cs, da, de, el, en, en-GB, es, et, eu, fa, fi, fr, gl, he, hr, hu, id, it, ja, ko, lt, lv, mk, mn, nl, no, pl, pt, pt-BR, ro, ru, sk, sl, sq, sr, sr-YU, sv, th, tr, uk, vi, zh, zh-TW [en] ja
  ====================================
  Default configuration data loaded.
</code></pre>

<h4>動作確認</h4>

<p>HerokuのアプリケーションURLへアクセスして、動作を確認します。</p>

<p><img src="/blog/images/2013-05-31-deploy-redmine-2-dot-3-1-on-heroku/01.png" width="500"></p>

<h4>参考</h4>

<ul>
<li><a href="https://github.com/redmine/redmine">Redmine</a></li>
<li><a href="http://redmine.jp/guide/RedmineInstall/">Redmineのインストール &mdash; Redmine Guide 日本語訳</a></li>
<li><a href="https://devcenter.heroku.com/articles/rails3">Getting Started with Rails 3.x on Heroku | Heroku Dev Center</a></li>
</ul>


<h4>関連記事</h4>

<ul>
<li><a href="/blog/2013/08/24/deploying-redmine-2-dot-0-on-openshift/">Red Hat OpenShiftにRedmine 2.0を展開する</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu 12.10にrbenvとruby-buildをインストール]]></title>
    <link href="http://momoto.github.io/blog/2012/11/23/install-rbenv-and-ruby-build-on-ubuntu-12-dot-10/"/>
    <updated>2012-11-23T20:23:00+09:00</updated>
    <id>http://momoto.github.io/blog/2012/11/23/install-rbenv-and-ruby-build-on-ubuntu-12-dot-10</id>
    <content type="html"><![CDATA[<p>rbenvとruby-buildを使用して、Ubuntu 12.10にRuby 1.9.3をインストールしたときの記録です。
rbenvとruby-buildはディストリビューションが配布するパッケージに含まれているため、Ubuntuのバージョン管理システム（APT）からインストールすることもできますが、次の記録はgithub.comからクローンする方法によるものです。</p>

<p>(* <em><a href="http://packages.ubuntu.com/quantal/rbenv" title="Ubuntu -- quantal の rbenv パッケージに関する詳細">rbenv</a>はprecise (12.04)以降、<a href="http://packages.ubuntu.com/quantal/ruby-build" title="Ubuntu -- quantal の ruby-build パッケージに関する詳細">ruby-build</a>はquantal (12.10)以降にuniverseに追加されたようです</em> )</p>

<!-- more -->


<h3>rbenvのインストール</h3>

<pre><code>$ git clone git://github.com/sstephenson/rbenv.git .rbenv
  Cloning into '.rbenv'...
  remote: Counting objects: 1040, done.
  remote: Compressing objects: 100% (413/413), done.
  remote: Total 1040 (delta 649), reused 962 (delta 599)
  Receiving objects: 100% (1040/1040), 138.43 KiB | 115 KiB/s, done.
  Resolving deltas: 100% (649/649), done.

$ echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &gt;&gt; ~/.bashrc
$ echo 'eval "$(rbenv init -)"' &gt;&gt; ~/.bashrc
</code></pre>

<h3>ruby-installのインストール</h3>

<pre><code>$ mkdir -p ~/.rbenv/plugins
$ cd ~/.rbenv/plugins
$ git clone git://github.com/sstephenson/ruby-build.git
  Cloning into 'ruby-build'...
  remote: Counting objects: 1329, done.
  remote: Compressing objects: 100% (631/631), done.
  remote: Total 1329 (delta 691), reused 1183 (delta 555)
  Receiving objects: 100% (1329/1329), 146.68 KiB | 150 KiB/s, done.
  Resolving deltas: 100% (691/691), done.

$ cd ruby-build
$ sudo bash ./install.sh
  Installed ruby-build at /usr/local
</code></pre>

<h3>Rubyの特定のバージョンをインストール（1.9.3-p327の場合）</h3>

<pre><code>## インストールが可能なバージョンのリストから"1.9.3"のバージョンを抽出
$ rbenv install --list | grep "1.9.3"
  1.9.3-dev
  1.9.3-p0
  1.9.3-p125
  1.9.3-p194
  1.9.3-p286
  1.9.3-p327
  1.9.3-preview1
  1.9.3-rc1

## 1.9.3-p327を指定して、目的のバージョンをインストール
$ rbenv install 1.9.3-p327
  Downloading yaml-0.1.4.tar.gz...
  -&gt; http://cloud.github.com/downloads/sstephenson/ruby-build-download-mirror/36c852831d02cf90508c29852361d01b
  Installing yaml-0.1.4...
  Installed yaml-0.1.4 to $HOME/.rbenv/versions/1.9.3-p327

  Downloading ruby-1.9.3-p327.tar.gz...
  -&gt; http://cloud.github.com/downloads/sstephenson/ruby-build-download-mirror/96118e856b502b5d7b3a4398e6c6e98c
  Installing ruby-1.9.3-p327...
  Installed ruby-1.9.3-p327 to $HOME/.rbenv/versions/1.9.3-p327
</code></pre>

<h3>Rubyの特定のバージョンを使用するように設定する（1.9.3-p194の場合）</h3>

<pre><code>## 既にインストールしたRubyのバージョンのリストを取得する
$ rbenv versions
  1.9.3-p194
  1.9.3-p327

## 1.9.3-p194を指定して、目的のバージョンを設定する（.rbenv-versionが作成されます）
~/workspace$ rbenv local 1.9.3-p194

## 設定されているRubyのバージョンの確認（この場合`rbenv local`でも同じ結果が得られます）
~/workspace$ rbenv version
  1.9.3-p194 (set by $HOME/workspace/.rbenv-version)

## カレントディレクトリで設定されているRubyのバージョンを解除
~/workspace$ rbenv local --unset
</code></pre>

<h3>参考</h3>

<ul>
<li><a href="http://packages.ubuntu.com/quantal/rbenv" title="Ubuntu -- quantal の rbenv パッケージに関する詳細">packages.ubuntu.com/quantal/rbenv</a></li>
<li><a href="http://packages.ubuntu.com/quantal/ruby-build" title="Ubuntu -- quantal の ruby-build パッケージに関する詳細">packages.ubuntu.com/quantal/ruby-build</a></li>
<li><a href="https://github.com/sstephenson/rbenv" title="sstephenson/rbenv">github.com/sstephenson/rbenv</a></li>
<li><a href="https://github.com/sstephenson/ruby-build" title="sstephenson/ruby-build">github.com/sstephenson/ruby-build</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby各種ライブラリに必要なパッケージ]]></title>
    <link href="http://momoto.github.io/blog/2012/08/01/requirements-for-ruby-libraries/"/>
    <updated>2012-08-01T03:18:00+09:00</updated>
    <id>http://momoto.github.io/blog/2012/08/01/requirements-for-ruby-libraries</id>
    <content type="html"><![CDATA[<h3>no such file to load &mdash; curses (LoadError)</h3>

<ul>
<li>RPM
<code>
$ sudo yum install ncurses-devel
</code></li>
</ul>


<!-- more -->


<h3>no such file to load &mdash; readline (LoadError)</h3>

<ul>
<li>RPM
<code>
$ sudo yum install readline-devel
</code></li>
</ul>


<h3>no such file to load &mdash; openssl (RuntimeError)</h3>

<ul>
<li><p>RPM
<code>
$ yum install openssl-devel
</code></p></li>
<li><p>deb
<code>
$ sudo apt-get install libssl-dev
</code></p></li>
</ul>


<h3>no such file to load &mdash; zlib</h3>

<ul>
<li>RPM
<code>
$ sudo yum install zlib-devel
</code></li>
</ul>


<h3>cannot load such file &mdash; rubypython (LoadError)</h3>

<ul>
<li><p>RPM
<code>
$ sudo yum install python-devel
</code></p></li>
<li><p>deb
<code>
$ sudo apt-get install python-dev
</code></p></li>
</ul>


<h3>参考</h3>

<ul>
<li><a href="http://doc.ruby-lang.org/ja/1.9.3/library/">Ruby 1.9.3 リファレンスマニュアル > ライブラリ一覧 </a></li>
<li><a href="http://doc.ruby-lang.org/ja/2.0.0/library/">Ruby 2.0.0 リファレンスマニュアル > ライブラリ一覧 </a></li>
<li><a href="http://raa.ruby-lang.org/">RAA &ndash; Ruby Application Archive</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OctopressをGithub pagesにデプロイ]]></title>
    <link href="http://momoto.github.io/blog/2012/07/31/deployment-octpress-on-github-pages/"/>
    <updated>2012-07-31T10:14:00+09:00</updated>
    <id>http://momoto.github.io/blog/2012/07/31/deployment-octpress-on-github-pages</id>
    <content type="html"><![CDATA[<h4>要件</h4>

<ul>
<li>github</li>
<li>ruby-1.9.2-p290</li>
<li>(rbenv and ruby-build) || rvm</li>
</ul>


<!-- more -->


<h4>Octopressのセットアップ</h4>

<pre><code>$ git clone git://github.com/imathis/octopress.git octopress
$ cd octopress/

$ gem install bundler
$ bundle install

$ rake install
$ rake setup_github_pages

  Enter the read/write url for your repository
  (For example, 'git@github.com:your_username/your_username.github.com)
  Repository url: 

$ rake generate
$ rake deploy
</code></pre>

<h4>&ldquo;source"ブランチに、ブログのソースを残す</h4>

<pre><code>$ git add .
$ git commit -m 'your message'
$ git push origin source
</code></pre>

<h4>記事を投稿</h4>

<p>$ rake new_post[&ldquo;hello, world&rdquo;]
$ vi source/_posts/YYYY-MM-DD-hello.world.markdown</p>

<pre><code>---
layout: post
title: "hello, world"
date: YYYY-MM-DD hh:mm
comments: true
categories:
---

hello, world 
</code></pre>

<p>$ rake generate
$ rake deploy</p>

<h4>参考</h4>

<ul>
<li><a href="http://octopress.org/docs/setup/">Octopress Setup &ndash; Octopress</a></li>
<li><a href="http://octopress.org/docs/deploying/github/">Deploying to Github Pages &ndash; Octopress</a></li>
<li><a href="http://octopress.org/docs/blogging/">Blogging Basics &ndash; Octopress</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
